/* tslint:disable */
/* eslint-disable */

// ######################################## THIS FILE WAS GENERATED BY MONGOOSE-TSGEN ######################################## //

// NOTE: ANY CHANGES MADE WILL BE OVERWRITTEN ON SUBSEQUENT EXECUTIONS OF MONGOOSE-TSGEN.
// TO ADD CUSTOM INTERFACES, DEFINE THEM IN THE `custom.d.ts` FILE.

import mongoose from "mongoose";
type ObjectId = mongoose.Types.ObjectId;

declare module "mongoose" {

	interface IOrderOrderItem extends mongoose.Types.Subdocument {
		name: string;
		qty: number;
		image: string;
		price: number;
		product: IProduct["_id"] | IProduct;
	}

	interface IOrderModel extends Model<IOrder> {
	}

	interface IOrder extends Document {
		user: IUser["_id"] | IUser;
		orderItems: Types.DocumentArray<IOrderOrderItem>;
		shippingAddress: {
			address: string;
			city: string;
			postalCode: string;
			country: string;
		};
		paymentMethod: string;
		paymentResult: {
			id?: string;
			status?: string;
			update_time?: string;
			email_address?: string;
		};
		taxPrice: number;
		shippingPrice: number;
		totalPrice: number;
		isPaid: boolean;
		paidAt?: Date;
		isDelivered: boolean;
		deliveredAt?: Date;
		updatedAt?: Date;
		createdAt?: Date;
	}

	interface IProductReview extends mongoose.Types.Subdocument {
		name: string;
		rating: number;
		comment: string;
		user: IUser["_id"] | IUser;
		updatedAt?: Date;
		createdAt?: Date;
	}

	interface IProductModel extends Model<IProduct> {
	}

	interface IProduct extends Document {
		user: IUser["_id"] | IUser;
		name: string;
		image: string;
		brand: string;
		category: string;
		description: string;
		reviews: Types.DocumentArray<IProductReview>;
		rating: number;
		numReviews: number;
		price: number;
		countInStock: number;
		updatedAt?: Date;
		createdAt?: Date;
	}

	interface IUserModel extends Model<IUser> {
		matchPasswords: Function;
	}

	interface IUser extends Document {
		name: string;
		email: string;
		password: string;
		isAdmin: boolean;
		updatedAt?: Date;
		createdAt?: Date;
	}

}
